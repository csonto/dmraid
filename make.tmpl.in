#
# Copyright (C) 2004-2010  Heinz Mauelshagen, Red Hat GmbH. All rights reserved.
#
# See file LICENSE at the top of this source tree for license information.
#

SHELL = /bin/sh

@SET_MAKE@

CC = @CC@
RANLIB = @RANLIB@
SHELL = /bin/sh
INSTALL = @INSTALL@
MKDIR_P = @MKDIR_P@
LN_S = @LN_S@
LIBS = @LIBS@
AWK = @AWK@
SED = @SED@

CFLAGS += @CFLAGS@
CLDFLAGS += @CLDFLAGS@
LDFLAGS += @LDFLAGS@
LD_DEPS += @LD_DEPS@
SOFLAG += @SOFLAG@

# Setup directory variables
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
datadir = @datarootdir@
datarootdir = @datarootdir@
infodir = @infodir@
mandir = @mandir@
usrlibdir = @usrlibdir@
ifeq ("@KLIBC@", "no")
  libdir = @libdir@
  sbindir = @sbindir@
  includedir = @includedir@
else
  libdir = @KLIBC_LIB_DIR@
  sbindir = @KLIBC_SBIN_DIR@
  includedir = @KLIBC_INCLUDE_DIR@
endif

# setup misc variables
DMRAID_VERSION := $(shell cat $(top_srcdir)/tools/VERSION)
DMRAID_LIB_VERSION := $(shell $(SED) --quiet 's/^.*\(DMRAID_LIB_VERSION\)[^_].*"\(.*\)"/\2/p' $(top_srcdir)/lib/version.h)
INSTALL_PROGRAM = $(INSTALL) $(STRIP)
INSTALL_DIR = $(INSTALL) -d
INSTALL_DATA = $(INSTALL) -m 644 -p

# The number of jobs to run, if blank, defaults to the make standard
ifndef MAKEFLAGS
MAKEFLAGS = @JOBS@
endif

SUFFIXES=.c .d .o .so .a

CFLAGS+=-fPIC -Wall -Wundef -Wcast-align -Wwrite-strings -Winline

ifeq ("@KLIBC@", "yes")
  # These ones make klibc compiles very loud
  CFLAGS+=-Wshadow -Wmissing-prototypes -Wmissing-declarations -Wnested-externs
endif

ifeq ("@DMRAID_TEST@", "yes")
  CFLAGS+=-DDMRAID_TEST
endif

# Don't allow for linking against DSO with static binary.
ifeq ("@STATIC_LINK@", "no")
	CFLAGS+=-DDMRAID_AUTOREGISTER
endif

ifeq ("@DEBUG@", "yes")
  CFLAGS+=-g -fno-omit-frame-pointer -DDEBUG
else
  ifeq ("@KLIBC@", "no")
    CFLAGS+=-O2
  else
    CFLAGS+=-Os
  endif
endif

ifeq ("@DEBUG_MALLOC@", "yes")
  CFLAGS+=-DDEBUG_MALLOC
endif

CFLAGS+=-D_LARGEFILE64_SOURCE

INCLUDES+=-I. -I$(top_srcdir)/include -I$(top_srcdir)/lib

STRIP=

DEPS=$(top_srcdir)/make.tmpl $(top_srcdir)/tools/VERSION Makefile

OBJECTS=$(SOURCES:%.c=%.o)
OBJECTS2=$(SOURCES2:%.c=%.o)

SUBDIRS.install := $(SUBDIRS:=.install)
SUBDIRS.remove := $(SUBDIRS:=.remove)
SUBDIRS.clean := $(SUBDIRS:=.clean)
SUBDIRS.distclean := $(SUBDIRS:=.distclean)

.PHONY: all install distclean clean cleandir
.PHONY: $(SUBDIRS) $(SUBDIRS.install) $(SUBDIRS.clean) $(SUBDIRS.distclean)
.PHONY: $(SUBDIRS.remove)

all: $(SUBDIRS) $(TARGETS)

install: all $(SUBDIRS.install)

remove: $(SUBDIRS.remove)

$(SUBDIRS):
	$(MAKE) -C $@

$(SUBDIRS.install): $(SUBDIRS)
	$(MAKE) -C $(@:.install=) install

$(SUBDIRS.remove): $(SUBDIRS)
	$(MAKE) -C $(@:.remove=) remove

$(SUBDIRS.clean):
	-$(MAKE) -C $(@:.clean=) clean

$(SUBDIRS.distclean):
	-$(MAKE) -C $(@:.distclean=) distclean

$(TARGETS): $(OBJECTS)

%.o: %.c $(top_builddir)/include/config.h
	$(CC) -o $@ -c $(INCLUDES) $(CFLAGS) -include $(top_builddir)/include/config.h $<

%.d: %.c
	$(MKDIR_P) $(dir $@); \
	set -e; \
	FILE=`echo $@ | sed 's/\\//\\\\\\//g;s/\\.d//g'`; \
	DEPS=`echo $(DEPS) | sed -e 's/\\//\\\\\\//g'`; \
	$(CC) -MM $(INCLUDES) $(DEFS) $(CFLAGS) -o $@ $<; \
	sed -i "s/\(.*\)\.o[ :]*/$$FILE.o $$FILE.d $$FILE.pot: $$DEPS /g" $@; \
	[ -s $@ ] || $(RM) $@

$(LIB_STATIC): $(OBJECTS)
	$(RM) $@
	$(AR) r $@ $(OBJECTS)
	$(RANLIB) $@

cleandir:
	$(RM) $(OBJECTS) $(OBJECTS2) $(TARGETS) $(CLEAN_TARGETS) \
		$(SOURCES:%.c=%.d) $(SOURCES2:%.c=%.d)

clean: $(SUBDIRS.clean) cleandir

distclean: $(SUBDIRS.distclean) cleandir
	$(RM) cscope.out config.cache config.log config.status \
		Makefile make.tmpl core tools/version.h

ifeq (,$(findstring $(MAKECMDGOALS), clean distclean))
    ifdef SOURCES
       -include $(SOURCES:.c=.d)
    endif
    ifdef SOURCES2
       -include $(SOURCES2:.c=.d)
    endif
endif
